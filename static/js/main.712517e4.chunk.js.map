{"version":3,"sources":["HighlightContext.tsx","types.tsx","styles.ts","CharacterBoard.ts","License.ts","Cell.tsx","Board.tsx","Job.tsx","useStoredState.ts","GatedInfo.tsx","Character.tsx","App.tsx","index.tsx"],"names":["HighlightStore","highlightedIds","Set","listeners","addListener","listener","_this","add","removeListener","delete","addHighlight","id","has","triggerListeners","removeHighlight","clearHighlights","clear","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","this","Symbol","iterator","next","done","value","err","return","HighlightContext","React","createContext","HighlightProvider","_ref","children","_React$useState","useState","store","Object","slicedToArray","react_default","a","createElement","Provider","Job","merge","_len","arguments","length","args","Array","_key","filtered","filter","x","assign","apply","concat","toConsumableArray","getAt","board","rowIndex","colIndex","row","sortLicense","b","Number","sequence","getAdjacents","adjacents","forEach","cell","up","push","down","left","right","CharacterBoard","job1","job2","quickenings","espers","classCallCheck","licenses","searchQueue","board1","getBoard","board2","cnt","size","license","License","get","includes","category","adj","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","sort","getLicensesByCategory","map","hp","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","name","replace","cost","params","keyData","lp","createClass","key","getDisplayCategory","split","trim","getDisplayName","memoize","hasOwnProperty","getAllByCategory","keys","Cell","_ref$active","active","_ref$onClick","onClick","_ref$showSequence","showSequence","usedEspers","useContext","EsperContext","_useHighlight","isHighlighting","_useState","_useState2","isHighlighted","setIsHighlighted","contextSet","useMemo","useEffect","lastHighlighted","ids","is","useHighlight","useCallback","_useHighlight2","highlightStore","_React$useState2","isHovering","setHovering","style","styles","cellHover","role","cellInactive","cellLock","onMouseEnter","onMouseLeave","alt","icon","src","number","tooltip","tooltipTitle","getDescription","line","tooltipLine","tooltipCost","position","display","width","height","cursor","opacity","backgroundColor","borderRadius","boxShadow","zIndex","fontSize","fontWeight","padding","top","lineHeight","border","pointerEvents","whiteSpace","marginTop","job","Archer","require","Shikari","Machinist","Monk","Bushi","RedBattlemage","WhiteMage","BlackMage","TimeBattlemage","Uhlan","Knight","Foebreaker","Error","Board","Cell_Cell","flexDirection","justifyContent","alignItems","JobSelector","onChange","e","target","getStoreInHash","hash","window","location","decoded","decodeURI","slice","JSON","parse","_","useStoredState","serializer","stringify","deserializer","storageKey","storedValue","getStoreValue","setter","val","removeStoreValue","console","log","setStoreValue","GatedInfo","root","join","marginLeft","Character","_useStoredState","_useStoredState2","setJob1","_useStoredState3","_useStoredState4","setJob2","_useStoredState5","_useStoredState6","setQuickenings","esperContext","_ref4","_ref3","esperId","handleClick","q","alreadyHas","removeEsper","addEsper","v","arr","addQuickening","title","GatedInfo_GatedInfo","getHP","infoPanel","hasLicense","Job_JobSelector","Board_Board","marginBottom","marginRight","flexWrap","DEFAULT_ESPER_CONTEXT","Map","EsperProvider","from","str","setUsedEspers","newMap","set","App","App_EsperProvider","HighlightContext_HighlightProvider","app","Character_Character","fontFamily","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.712517e4.chunk.js","sourcesContent":["/**\n * Creates a context where Licenses can be highlighted across all displayed\n * boards. We use a separate store instead of just setting state so that we\n * don't update all cells if their highlight state hasn't changed.\n */\nimport React, {useState, useContext, useEffect, useMemo} from 'react';\nimport {LicenseId} from './License';\n\ntype HighlightListener = (ids: Set<LicenseId>) => boolean;\n\nclass HighlightStore {\n  private highlightedIds: Set<LicenseId> = new Set();\n  private listeners: Set<HighlightListener> = new Set();\n  addListener = (listener: HighlightListener) => {\n    this.listeners.add(listener);\n  };\n  removeListener = (listener: HighlightListener) => {\n    this.listeners.delete(listener);\n  };\n  private triggerListeners() {\n    for (const listener of this.listeners) {\n      listener(this.highlightedIds);\n    }\n  }\n  addHighlight = (id: LicenseId) => {\n    if (!this.highlightedIds.has(id)) {\n      this.highlightedIds.add(id);\n      this.triggerListeners();\n    }\n  };\n  removeHighlight = (id: LicenseId) => {\n    if (this.highlightedIds.has(id)) {\n      this.highlightedIds.delete(id);\n      this.triggerListeners();\n    }\n  };\n  clearHighlights = () => {\n    this.highlightedIds.clear();\n    this.triggerListeners();\n  };\n}\n\nconst HighlightContext = React.createContext<HighlightStore>(\n  new HighlightStore(),\n);\n\ninterface HighlightProviderProps {\n  children: React.ReactNode;\n}\n\n/**\n * Creates a store that can save which elements are being highlighted\n */\nexport const HighlightProvider: React.FC<HighlightProviderProps> = ({\n  children,\n}) => {\n  const [store] = React.useState(() => new HighlightStore());\n  return (\n    <HighlightContext.Provider value={store}>\n      {children}\n    </HighlightContext.Provider>\n  );\n};\n\ninterface ContextSet {\n  add(id: LicenseId): void;\n  delete(id: LicenseId): void;\n  clear(): void;\n}\n\nexport function useHighlight(\n  isHighlighting: HighlightListener,\n): [boolean, ContextSet] {\n  const [isHighlighted, setIsHighlighted] = useState(false);\n  const store = useContext(HighlightContext);\n  const contextSet: ContextSet = useMemo(\n    () => ({\n      add: store.addHighlight,\n      delete: store.removeHighlight,\n      clear: store.clearHighlights,\n    }),\n    [store],\n  );\n  useEffect(() => {\n    let lastHighlighted = false;\n    const listener: HighlightListener = ids => {\n      const is = isHighlighting(ids);\n      if (is !== lastHighlighted) {\n        setIsHighlighted(is);\n        lastHighlighted = is;\n      }\n      return is;\n    };\n    store.addListener(listener);\n    return () => store.removeListener(listener);\n  }, [store, isHighlighting]);\n  return [isHighlighted, contextSet];\n}\n","/**\n * Design\n * - Everything is based on the key of the license (SUM1)\n * - Character\n *   - jobs: Array<Job>\n *   - summons: Array<LicenseKey>\n *   - quickenings: Array<LicenseKey>\n * - From there, can do a BFS to figure out which license keys the character has\n * - new CharacterBoardCache(character)\n *   - getLicenseAt(job, x, y): null | License\n *   - getPositionsOf(licenseKey): Array<[x, y]>\n *   - getLicenses(): Array<License>\n *   - getLicensesByCategory(category): Array<License>\n * - License\n *   - id\n *   - name\n *   - cost\n *   - category\n *   - number\n */\n\nexport enum Job {\n  Archer = 'archer',\n  Shikari = 'shikari',\n  Machinist = 'machinist',\n  Monk = 'monk',\n  Bushi = 'bushi',\n  RedBattlemage = 'redbattlemage',\n  WhiteMage = 'whitemage',\n  BlackMage = 'blackmage',\n  TimeBattlemage = 'timebattlemage',\n  Uhlan = 'uhlan',\n  Knight = 'knight',\n  Foebreaker = 'foebreaker',\n}\n","export type StyleSheet = { [sheet: string]: React.CSSProperties };\n\nexport function merge(\n  ...args: Array<null | boolean | React.CSSProperties>\n): React.CSSProperties {\n  const filtered = args.filter(x => x);\n  return Object.assign({}, ...filtered);\n}\n","/**\n * Class to abstract doing a BFS on a character's licenses, including their:\n *   1. Two jobs\n *   2. Esper selection\n *   3. Quickening selection\n * And provides shortcuts to get common stats on boards\n */\nimport {getBoard} from './Board';\nimport {Job} from './types';\nimport {LicenseId, License} from './License';\n\nfunction getAt(\n  board: (string | null)[][],\n  rowIndex: number,\n  colIndex: number,\n): LicenseId | null {\n  const row = board[rowIndex];\n  if (row == null) {\n    return null;\n  }\n  return (row[colIndex] as LicenseId) || null;\n}\n\nexport function sortLicense(a: License, b: License): number {\n  const numA = Number(a.sequence) || 0;\n  const numB = Number(b.sequence) || 0;\n  return numA - numB;\n}\n\nfunction getAdjacents(\n  board: (string | null)[][],\n  id: LicenseId,\n): Array<LicenseId> {\n  const adjacents: LicenseId[] = [];\n  board.forEach((row, rowIndex) => {\n    row.forEach((cell, colIndex) => {\n      if (cell === id) {\n        const up = getAt(board, rowIndex - 1, colIndex);\n        if (up) adjacents.push(up);\n        const down = getAt(board, rowIndex + 1, colIndex);\n        if (down) adjacents.push(down);\n        const left = getAt(board, rowIndex, colIndex - 1);\n        if (left) adjacents.push(left);\n        const right = getAt(board, rowIndex, colIndex + 1);\n        if (right) adjacents.push(right);\n      }\n    });\n  });\n  return adjacents;\n}\n\nexport default class CharacterBoard {\n  licenses: Set<LicenseId>;\n  constructor(\n    job1: null | Job,\n    job2: null | Job,\n    quickenings: Array<LicenseId>,\n    espers: Array<LicenseId>,\n  ) {\n    const licenses: Set<LicenseId> = new Set();\n    const searchQueue: Set<LicenseId> = new Set(['o' as LicenseId]);\n    const board1 = job1 == null ? null : getBoard(job1);\n    const board2 = job2 == null ? null : getBoard(job2);\n    let cnt = 0;\n    while (searchQueue.size > 0) {\n      if (cnt++ === 100) {\n        break;\n      }\n      for (const id of searchQueue) {\n        if (cnt++ === 100) {\n          break;\n        }\n        const license = License.get(id);\n        searchQueue.delete(id);\n        if (license) {\n          const isLock = ['summon', 'quickening'].includes(license.category);\n          const shouldFind =\n            !isLock || quickenings.includes(id) || espers.includes(id);\n          if (shouldFind) {\n            licenses.add(id);\n            if (board1) {\n              getAdjacents(board1, id).forEach(adj => {\n                if (!licenses.has(adj)) searchQueue.add(adj);\n              });\n            }\n            if (board2) {\n              getAdjacents(board2, id).forEach(adj => {\n                if (!licenses.has(adj)) searchQueue.add(adj);\n              });\n            }\n          }\n        }\n      }\n    }\n    this.licenses = licenses;\n  }\n\n  getLicensesByCategory(category: string): License[] {\n    const licenses: License[] = [];\n    for (const id of this.licenses) {\n      const license = License.get(id);\n      if (license && license.category === category) {\n        licenses.push(license);\n      }\n    }\n    return licenses.sort(sortLicense);\n  }\n\n  getNumberOfLicensesByCategory(category: string): number {\n    return this.getLicensesByCategory(category).length;\n  }\n\n  getSequenceNumbersByCategory(category: string): string[] {\n    return this.getLicensesByCategory(category).map(license => {\n      return license.sequence;\n    });\n  }\n\n  getHP(): number {\n    let hp = 0;\n    const licenses = this.getLicensesByCategory('hp');\n    for (const license of licenses) {\n      const num = Number(license.name.replace(/[^0-9]*/g, ''));\n      hp += num;\n    }\n    return hp;\n  }\n\n  hasLicense(id: LicenseId): boolean {\n    return this.licenses.has(id);\n  }\n}\n","import keyData from './data/key.json';\nimport {sortLicense} from './CharacterBoard';\nimport memoize from 'lodash/memoize';\n\nexport type LicenseId = keyof typeof keyData;\n\nexport class License {\n  id: LicenseId;\n  name: string;\n  cost: number;\n  category: string;\n  sequence: string;\n  constructor(id: LicenseId) {\n    const params = keyData[id];\n    this.id = id;\n    this.name = params.name;\n    this.cost = Number(params.lp);\n    this.category = params.category;\n    this.sequence = id.replace(/[A-Za-z]+/, '');\n  }\n  static get = memoize(\n    (id: null | string | LicenseId): null | License => {\n      if (id == null || !keyData.hasOwnProperty(id)) {\n        return null;\n      }\n      return new License(id as LicenseId);\n    },\n  );\n  static getAllByCategory = memoize(\n    (category: string): License[] => {\n      const licenses = Object.keys(keyData).map(id => {\n        const license = License.get(id);\n        if (!license) {\n          return null;\n        }\n        if (license.category === category) {\n          return license;\n        }\n        return null;\n      });\n      const filtered = licenses.filter(x => x) as License[];\n      return filtered.sort(sortLicense);\n    },\n  );\n  getDisplayCategory(): string {\n    switch (this.category) {\n      case 'whitemagick':\n        return 'White Magick';\n      case 'blackmagick':\n        return 'Black Magick';\n      case 'timemagick':\n        return 'Time Magick';\n      case 'arcanemagick':\n        return 'Arcane Magick';\n      case 'greenmagick':\n        return 'Green Magick';\n      case 'quickening':\n        return 'Quickening';\n      case 'summon':\n        return 'Esper';\n      case 'hp':\n        return 'HP';\n      case 'gambit':\n        return 'Gambit';\n      case 'lightarmor':\n        return 'Light Armor';\n      case 'mysticarmor':\n        return 'Mystic Armor';\n      case 'heavyarmor':\n        return 'Heavy Armor';\n      case 'accessory':\n        return 'Accessory';\n      case 'channelling':\n        return 'Channelling';\n      case 'technick':\n        return 'Technick';\n      case 'sword':\n        return 'Swords';\n      case 'ninjasword':\n        return 'Ninja Swords';\n      case 'handbomb':\n        return 'Handbombs';\n      case 'bow':\n        return 'Bows';\n      case 'mace':\n        return 'Maces';\n      case 'shield':\n        return 'Shields';\n      case 'greatsword':\n        return 'Greatswords';\n      case 'pole':\n        return 'Poles';\n      case 'dagger':\n        return 'Daggers';\n      case 'katana':\n        return 'Katanas';\n      case 'genjiarmor':\n        return 'Genji Armor';\n      case 'axehammer':\n        return 'Axes and Hammers';\n      case 'gun':\n        return 'Guns';\n      case 'spear':\n        return 'Spears';\n      case 'staff':\n        return 'Staves';\n      case 'shieldblock':\n        return 'Shield Block';\n      case 'passive':\n        return this.name;\n      case 'battlelore':\n      case 'magicklore':\n      case 'potionlore':\n      case 'phoenixlore':\n      case 'remedylore':\n      case 'etherlore':\n      case 'swiftness':\n        return this.name.replace(/\\s*\\d+/, '');\n      default:\n        return '';\n    }\n  }\n  getDisplayName(): string {\n    if (this.id === '+') {\n      return 'Second Board';\n    }\n    if (this.id === 'o') {\n      return this.name;\n    }\n    if (['summon'].includes(this.category)) {\n      return this.getDisplayCategory();\n    }\n    return `${this.getDisplayCategory()} ${this.sequence}`;\n  }\n  getDescription(): Array<string> {\n    if (['board', 'passive'].includes(this.category)) {\n      return [];\n    }\n    return this.name\n      .split('/')\n      .map(name => name.trim())\n      .filter(name => name !== this.getDisplayName());\n  }\n}\n","import React, {useContext, useCallback} from 'react';\nimport {merge, StyleSheet} from './styles';\nimport {License, LicenseId} from './License';\nimport {useHighlight} from './HighlightContext';\nimport {EsperContext} from './App';\n\ninterface CellProps {\n  id: null | string;\n  active?: boolean;\n  onClick?: (id: LicenseId) => any;\n  showSequence?: boolean;\n}\n\nexport const Cell: React.FC<CellProps> = ({\n  id,\n  active = false,\n  onClick = () => {},\n  showSequence = false,\n}) => {\n  const {usedEspers} = useContext(EsperContext);\n  const [isHighlighting, highlightStore] = useHighlight(\n    useCallback((ids) => ids.has(id as LicenseId), [id]),\n  );\n  const [isHovering, setHovering] = React.useState<boolean>(false);\n  const license = License.get(id);\n  return (\n    <div\n      style={merge(\n        styles.cell,\n        (isHovering || (isHighlighting != null && isHighlighting)) &&\n          styles.cellHover,\n      )}>\n      {license && (\n        <div\n          role=\"button\"\n          onClick={() => onClick(id as LicenseId)}\n          style={merge(\n            !active && styles.cellInactive,\n\n            ['summon', 'quickening'].includes(license.category) &&\n              styles.cellLock,\n          )}\n          onMouseEnter={() => {\n            setHovering(true);\n            highlightStore.add(id as LicenseId);\n          }}\n          onMouseLeave={() => {\n            setHovering(false);\n            highlightStore.delete(id as LicenseId);\n          }}>\n          <img\n            alt={license.name}\n            style={styles.icon}\n            src={`assets/${license.category}.png`}\n          />\n          {showSequence &&\n            license.sequence != null &&\n            license.sequence !== '+' && (\n              <div style={styles.number}>{license.sequence}</div>\n            )}\n        </div>\n      )}\n      {isHovering && license && (\n        <div style={styles.tooltip}>\n          <div style={styles.tooltipTitle}>{license.getDisplayName()}</div>\n          {license.getDescription().map((line) => (\n            <div key={line} style={styles.tooltipLine}>\n              {line}\n            </div>\n          ))}\n          {usedEspers.get(license.id) && (\n            <div style={styles.tooltipLine}>\n              Used by {usedEspers.get(license.id)}\n            </div>\n          )}\n          <div style={styles.tooltipCost}>{license.cost} LP</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst styles: StyleSheet = {\n  cell: {\n    position: 'relative',\n    display: 'flex',\n    width: 16,\n    height: 16,\n  },\n  cellLock: {\n    cursor: 'pointer',\n  },\n  cellInactive: {\n    opacity: 0.4,\n    filter: 'grayscale(.75)',\n  },\n  cellHover: {\n    backgroundColor: '#d3e7fa',\n    borderRadius: 100,\n    boxShadow: '0px 0px 0px 4px #d3e7fa, 0px 0px 0px 6px #6189EB',\n    zIndex: 900,\n  },\n  icon: {\n    width: 16,\n    height: 16,\n  },\n  number: {\n    fontSize: 10,\n    fontWeight: 900,\n    backgroundColor: 'rgba(255, 255, 255, .6)',\n    padding: '0 2px',\n    borderRadius: 100,\n    position: 'absolute',\n    top: 1,\n    right: 1,\n  },\n  tooltip: {\n    fontSize: 12,\n    lineHeight: '14px',\n    position: 'absolute',\n    backgroundColor: '#eee',\n    padding: '6px 12px 6px 8px',\n    borderRadius: 8,\n    left: 18,\n    top: -4,\n    zIndex: 999,\n    border: '2px solid white',\n    pointerEvents: 'none',\n    opacity: 0.8,\n  },\n  tooltipTitle: {\n    fontWeight: 700,\n    whiteSpace: 'nowrap',\n  },\n  tooltipLine: {\n    whiteSpace: 'nowrap',\n  },\n  tooltipCost: {\n    whiteSpace: 'nowrap',\n    marginTop: 2,\n    fontSize: 8,\n  },\n};\n","import React from 'react';\nimport {Job} from './types';\nimport {Cell} from './Cell';\nimport {StyleSheet} from './styles';\nimport {LicenseId} from './License';\n\ninterface BoardProps {\n  licenses: Set<LicenseId>;\n  job: Job;\n  onClick: (id: LicenseId) => any;\n}\n\nexport function getBoard(job: Job): Array<Array<null | string>> {\n  switch (job) {\n    case Job.Archer:\n      return require('./data/archer.json');\n    case Job.Shikari:\n      return require('./data/shikari.json');\n    case Job.Machinist:\n      return require('./data/machinist.json');\n    case Job.Monk:\n      return require('./data/monk.json');\n    case Job.Bushi:\n      return require('./data/bushi.json');\n    case Job.RedBattlemage:\n      return require('./data/redbattlemage.json');\n    case Job.WhiteMage:\n      return require('./data/whitemage.json');\n    case Job.BlackMage:\n      return require('./data/blackmage.json');\n    case Job.TimeBattlemage:\n      return require('./data/timebattlemage.json');\n    case Job.Uhlan:\n      return require('./data/uhlan.json');\n    case Job.Knight:\n      return require('./data/knight.json');\n    case Job.Foebreaker:\n      return require('./data/foebreaker.json');\n    default:\n      throw new Error(`Unknown job ${job}`);\n  }\n}\n\nexport const Board: React.FC<BoardProps> = ({licenses, job, onClick}) => {\n  return (\n    <div style={styles.board}>\n      {getBoard(job).map((row, rowIndex) => (\n        <div key={rowIndex} style={styles.row}>\n          {row.map((id, colIndex) => (\n            <Cell\n              onClick={onClick}\n              key={colIndex}\n              id={id}\n              active={licenses.has(id as LicenseId)}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst styles: StyleSheet = {\n  board: {\n    width: 320,\n    height: 320,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  row: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n};\n","import React from 'react';\nimport {Job} from './types';\n\ninterface JobSelectorProps {\n  value: null | Job;\n  onChange: (job: null | Job) => any;\n}\n\nexport const JobSelector: React.FC<JobSelectorProps> = ({value, onChange}) => {\n  return (\n    <select\n      value={value || undefined}\n      onChange={e => {\n        const value = e.target.value;\n        if (value === 'None') {\n          onChange(null);\n        } else {\n          onChange(e.target.value as Job);\n        }\n      }}>\n      <option value=\"None\">None</option>\n      <option value={Job.Archer}>Archer</option>\n      <option value={Job.BlackMage}>Black Mage</option>\n      <option value={Job.Bushi}>Bushi</option>\n      <option value={Job.Foebreaker}>Foebreaker</option>\n      <option value={Job.Knight}>Knight</option>\n      <option value={Job.Machinist}>Machinist</option>\n      <option value={Job.Monk}>Monk</option>\n      <option value={Job.RedBattlemage}>Red Battlemage</option>\n      <option value={Job.Shikari}>Shikari</option>\n      <option value={Job.TimeBattlemage}>Time Battlemage</option>\n      <option value={Job.Uhlan}>Uhlan</option>\n      <option value={Job.WhiteMage}>White Mage</option>\n    </select>\n  );\n};\n","/**\n * Store state values into the hash, and update the hash when the state changes\n */\nimport {useState, useCallback} from 'react';\n\nfunction getStoreInHash() {\n  try {\n    const hash = window.location.hash;\n    const decoded = decodeURI(hash.slice(1));\n    return JSON.parse(decoded) as {[key: string]: string};\n  } catch (_) {\n    return {};\n  }\n}\n\nfunction getStoreValue(key: string): null | string {\n  const store = getStoreInHash();\n  const value = store[key];\n  if (value == null) {\n    return null;\n  }\n  return value;\n}\n\nfunction setStoreValue(key: string, value: string): void {\n  const store = getStoreInHash();\n  store[key] = value;\n  console.log(store);\n  window.location.hash = JSON.stringify(store);\n}\n\nfunction removeStoreValue(key: string): void {\n  const store = getStoreInHash();\n  delete store[key];\n  window.location.hash = JSON.stringify(store);\n}\n\nexport default function useStoredState<T>(\n  name: string,\n  key: string,\n  serializer: (val: T) => string = JSON.stringify,\n  deserializer: (val: string) => T = JSON.parse,\n): [null | T, (val: null | T) => any] {\n  const storageKey = `${name}-${key}`;\n  const [value, setter] = useState<null | T>(() => {\n    const storedValue = getStoreValue(storageKey);\n    if (storedValue == null) {\n      return null;\n    }\n    const storage = deserializer(storedValue) as T;\n    return storage;\n  });\n  const storageSetter = useCallback(\n    (val: null | T) => {\n      if (val == null) {\n        removeStoreValue(storageKey);\n      } else {\n        setStoreValue(storageKey, serializer(val));\n      }\n      setter(val);\n    },\n    [serializer, storageKey],\n  );\n  return [value, storageSetter];\n}\n","import React from 'react';\nimport CharacterBoard from './CharacterBoard';\nimport {StyleSheet} from './styles';\n\ninterface GatedInfoProps {\n  board: CharacterBoard;\n}\n\nexport const GatedInfo: React.FC<GatedInfoProps> = ({board}) => {\n  const quickenings = board\n    .getLicensesByCategory('quickening')\n    .map(license => 'Q' + license.sequence);\n  const espers = board\n    .getLicensesByCategory('summon')\n    .map(license => license.getDescription());\n  return (\n    <span style={styles.root}>({[...quickenings, ...espers].join(', ')})</span>\n  );\n};\n\nconst styles: StyleSheet = {\n  root: {\n    marginLeft: 4,\n    fontWeight: 300,\n  },\n};\n","import React, {useMemo, useContext} from 'react';\nimport {Board} from './Board';\nimport {Job} from './types';\nimport {StyleSheet} from './styles';\nimport {LicenseId, License} from './License';\nimport {JobSelector} from './Job';\nimport {EsperContext} from './App';\nimport useStoredState from './useStoredState';\nimport CharacterBoard from './CharacterBoard';\nimport {Cell} from './Cell';\nimport {GatedInfo} from './GatedInfo';\n\nfunction addQuickening(arr: LicenseId[], q: LicenseId): LicenseId[] {\n  if (arr.length >= 3) {\n    return arr;\n  }\n  return [...arr, q];\n}\n\nfunction removeQuickening(arr: LicenseId[], q: LicenseId): LicenseId[] {\n  return arr.filter(v => v !== q);\n}\n\ninterface CharacterProps {\n  name: string;\n}\nexport const Character: React.FC<CharacterProps> = ({name}) => {\n  const [job1, setJob1] = useStoredState<Job>(name, 'job1');\n  const [job2, setJob2] = useStoredState<Job>(name, 'job2');\n  const [quickenings, setQuickenings] = useStoredState<Array<LicenseId>>(\n    name,\n    'quickenings',\n  );\n  const esperContext = useContext(EsperContext);\n  const espers: LicenseId[] = useMemo(() => {\n    const e: LicenseId[] = [];\n    for (const [esperId, user] of esperContext.usedEspers) {\n      if (user === name) {\n        e.push(esperId);\n      }\n    }\n    return e;\n  }, [name, esperContext.usedEspers]);\n  const board = useMemo(\n    () => new CharacterBoard(job1, job2, quickenings || [], espers || []),\n    [job1, job2, quickenings, espers],\n  );\n  const handleClick = (id: LicenseId) => {\n    const license = License.get(id);\n    if (!license) {\n      return;\n    }\n    const alreadyHas = board.licenses.has(id);\n    if (license.category === 'summon') {\n      if (alreadyHas) {\n        esperContext.removeEsper(id);\n      } else {\n        esperContext.addEsper(id, name);\n      }\n    } else if (license.category === 'quickening') {\n      if (alreadyHas) {\n        console.log('remove quickenings?');\n        setQuickenings(removeQuickening(quickenings || [], id));\n      } else {\n        setQuickenings(addQuickening(quickenings || [], id));\n      }\n    }\n  };\n  return (\n    <div style={styles.root}>\n      <h2 style={styles.title}>\n        {name}\n        <GatedInfo board={board} />\n      </h2>\n      <div>HP: {board.getHP()} / 3035</div>\n      <div style={styles.row}>\n        <div>\n          {/* Display the portion of these */}\n          {[\n            'quickening',\n            'summon',\n            'hp',\n            'battlelore',\n            'magicklore',\n            'swiftness',\n            'channelling',\n            'whitemagick',\n            'blackmagick',\n            'timemagick',\n            'arcanemagick',\n            'greenmagick',\n            'technick',\n            'passive',\n            'lightarmor',\n            'heavyarmor',\n            'mysticarmor',\n            'genjiarmor',\n          ].map(category => (\n            <div key={category} style={styles.infoPanel}>\n              {License.getAllByCategory(category).map(license => (\n                <Cell\n                  onClick={handleClick}\n                  key={license.id}\n                  id={license.id}\n                  active={board.hasLicense(license.id)}\n                />\n              ))}\n            </div>\n          ))}\n          <div style={styles.infoPanel}>\n            {['potionlore', 'phoenixlore', 'remedylore', 'etherlore'].map(\n              category =>\n                License.getAllByCategory(category).map(license => (\n                  <Cell\n                    onClick={handleClick}\n                    key={license.id}\n                    id={license.id}\n                    active={board.hasLicense(license.id)}\n                  />\n                )),\n            )}\n          </div>\n        </div>\n        <div>\n          <JobSelector value={job1} onChange={setJob1} />\n          {job1 != null && (\n            <div style={styles.board}>\n              <Board\n                job={job1}\n                licenses={board.licenses}\n                onClick={handleClick}\n              />\n            </div>\n          )}\n        </div>\n        <div>\n          <JobSelector value={job2} onChange={setJob2} />\n          {job2 != null && (\n            <div style={styles.board}>\n              <Board\n                job={job2}\n                licenses={board.licenses}\n                onClick={handleClick}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst styles: StyleSheet = {\n  root: {},\n  row: {\n    marginBottom: 12,\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 700,\n  },\n  board: {\n    marginRight: 24,\n  },\n  infoPanel: {\n    width: 256,\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n};\n","import React, {createContext, useCallback, useMemo} from 'react';\nimport {StyleSheet} from './styles';\nimport {HighlightProvider} from './HighlightContext';\nimport {Character} from './Character';\nimport {LicenseId} from './License';\nimport useStoredState from './useStoredState';\n\ninterface EsperContextType {\n  usedEspers: Map<LicenseId, string>;\n  addEsper: (id: LicenseId, name: string) => any;\n  removeEsper: (id: LicenseId) => any;\n}\nconst DEFAULT_ESPER_CONTEXT: EsperContextType = {\n  usedEspers: new Map(),\n  addEsper: () => {},\n  removeEsper: () => {},\n};\nexport const EsperContext = createContext<EsperContextType>(\n  DEFAULT_ESPER_CONTEXT,\n);\n\nconst EsperProvider: React.FC = ({children}) => {\n  const [usedEspers, setUsedEspers] = useStoredState<Map<LicenseId, string>>(\n    'espers',\n    'all',\n    map => JSON.stringify(Array.from(map)),\n    str => new Map(JSON.parse(str)),\n  );\n  const addEsper = useCallback(\n    (id: LicenseId, name: string) => {\n      const newMap = new Map(usedEspers || new Map());\n      newMap.set(id, name);\n      setUsedEspers(newMap);\n    },\n    [usedEspers, setUsedEspers],\n  );\n  const removeEsper = useCallback(\n    (id: LicenseId) => {\n      const newMap = new Map(usedEspers || new Map());\n      newMap.delete(id);\n      setUsedEspers(newMap);\n    },\n    [usedEspers, setUsedEspers],\n  );\n  const value: EsperContextType = useMemo(\n    () => ({usedEspers: usedEspers || new Map(), addEsper, removeEsper}),\n    [usedEspers, addEsper, removeEsper],\n  );\n  return (\n    <EsperContext.Provider value={value}>{children}</EsperContext.Provider>\n  );\n};\n\nconst App: React.FC = () => {\n  return (\n    <EsperProvider>\n      <HighlightProvider>\n        <div style={styles.app}>\n          <Character name=\"Vaan\" />\n          <Character name=\"Balthier\" />\n          <Character name=\"Fran\" />\n          <Character name=\"Basch\" />\n          <Character name=\"Ashe\" />\n          <Character name=\"Penelo\" />\n        </div>\n      </HighlightProvider>\n    </EsperProvider>\n  );\n};\n\nexport default App;\n\nconst styles: StyleSheet = {\n  app: {\n    fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif`,\n    padding: 8,\n  },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}